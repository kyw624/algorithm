/*
1. N명이 참가하는 토너먼트 형식의 게임이 진행된다.
2. 각 참가자는 1번부터 N번을 차례대로 배정받는다.
3. 1번:2번 / 3번:4번 / ... / N-1번:N번끼리 게임을 진행한다.
4. 승리해서 다음 라운드에 진출하는 참가자는 다시 1번부터 N/2번을 차례대로 배정받는다.
  1) 1번:2번에서 2번이 승리 => 2번은 1번을 배정받음.
  2) 3번:4번에서 3번이 승리 => 3번은 2번을 배정받음.
5. 게임은 최종 한 명이 남을 때까지 진행된다.
6. 이때, 처음 라운드에서 A번을 가진 참가자는 경쟁자인 B번 참가자와 몇 라운드에서 만나는지 구하는 문제.

[파라미터]
  - N: 게임 참가자 수
  - A: 참가자 번호
  - B: 경쟁자 번호

[조건]
  - A번 참가자와 B번 참가자는 서로 붙기 전까지 항상 이긴다고 가정한다.
  - 2^1 <= N <= 2^20
  - A, B <= N (A != B인 자연수)

[출력]
  - A번과 B번이 만나는 라운드를 리턴.
*/

function solution(N, A, B) {
  let a = A;
  let b = B;
  let answer = 0;

  while (a !== b) {
    a = Math.ceil(a / 2);
    b = Math.ceil(b / 2);
    answer++;
  }

  return answer;
}

console.log(solution(8, 4, 7)); // 3
